DROP TABLE COMMENTS;
DROP TABLE RATINGS;
DROP TABLE REPORTS;
DROP TABLE SCHEDULE;
DROP TABLE ESTIMATES;
DROP TABLE POSTS;
DROP TABLE USERS;

-- 1. USERS (회원)
CREATE TABLE USERS (
    USER_ID NUMBER(10) PRIMARY KEY,
    USERNAME VARCHAR2(50) NOT NULL,
    PASSWORD VARCHAR2(255) NOT NULL,
    EMAIL VARCHAR2(100) NOT NULL UNIQUE,
    USERSROLE VARCHAR2(20) DEFAULT 'MEMBER' CHECK (USERSROLE IN ('MEMBER', 'ADMIN')),  -- 역할: 회원, 관리자
    CREATED_AT DATE DEFAULT SYSDATE,
    IS_ACTIVE CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y', 'N'))  -- 활성화 상태
);

-- USERS 테이블에 테스트 데이터 10개 삽입
INSERT INTO USERS (USER_ID, USERNAME, EMAIL, PASSWORD, CREATED_AT)
VALUES (1, 'user1', 'user1@example.com', 'password1', SYSDATE);

INSERT INTO USERS (USER_ID, USERNAME, EMAIL, PASSWORD, CREATED_AT)
VALUES (2, 'user2', 'user2@example.com', 'password2', SYSDATE);

INSERT INTO USERS (USER_ID, USERNAME, EMAIL, PASSWORD, CREATED_AT)
VALUES (3, 'user3', 'user3@example.com', 'password3', SYSDATE);

INSERT INTO USERS (USER_ID, USERNAME, EMAIL, PASSWORD, CREATED_AT)
VALUES (4, 'user4', 'user4@example.com', 'password4', SYSDATE);

INSERT INTO USERS (USER_ID, USERNAME, EMAIL, PASSWORD, CREATED_AT)
VALUES (5, 'user5', 'user5@example.com', 'password5', SYSDATE);

-- USER_ID 6부터 10까지 추가 생성
BEGIN
    FOR i IN 6..10 LOOP
        INSERT INTO USERS (USER_ID, USERNAME, EMAIL, PASSWORD, CREATED_AT)
        VALUES (i, 'user' || i, 'user' || i || '@example.com', 'password' || i, SYSDATE);
    END LOOP;
END;
/
-- 2. POSTS(게시판 글)
CREATE TABLE POSTS (
    POST_ID NUMBER(10) PRIMARY KEY,
    USER_ID NUMBER(10) NOT NULL,
    TITLE VARCHAR2(100) NOT NULL,
    CONTENT CLOB,
    IS_PRIVATE CHAR(1) DEFAULT 'N' CHECK (IS_PRIVATE IN ('Y', 'N')),  -- 공개/비공개
    CATEGORY VARCHAR2(50) DEFAULT 'Inquiry' CHECK(CATEGORY IN('Inquiry', 'request')),
    CREATED_AT DATE DEFAULT SYSDATE,
    UPDATED_AT DATE,
	FILENAMES VARCHAR2(255),
	READCOUNT NUMBER(10) DEFAULT '0',
	COMMENTCOUNT NUMBER(10) DEFAULT '0',
    STATUS VARCHAR2(50) NOT NULL CHECK (STATUS IN ('OPEN', 'CLOSED', 'PENDING')),  -- 게시글 상태
    CONSTRAINT POSTS_USERID_FK FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);


-- POSTS 테이블에 50개의 테스트 데이터 삽입
INSERT INTO POSTS (POST_ID, USER_ID, TITLE, CONTENT, IS_PRIVATE, CATEGORY, CREATED_AT, UPDATED_AT, FILENAMES, READCOUNT, COMMENTCOUNT, STATUS)
VALUES (1, 1, '첫 번째 게시글', '이것은 테스트 콘텐츠입니다.', 'N', 'Inquiry', SYSDATE, SYSDATE, 'file1.txt', 10, 5, 'OPEN');

INSERT INTO POSTS (POST_ID, USER_ID, TITLE, CONTENT, IS_PRIVATE, CATEGORY, CREATED_AT, UPDATED_AT, FILENAMES, READCOUNT, COMMENTCOUNT, STATUS)
VALUES (2, 2, '두 번째 게시글', '이것은 테스트 콘텐츠입니다.', 'Y', 'request', SYSDATE, SYSDATE, 'file2.txt', 20, 10, 'CLOSED');

-- 나머지 48개의 레코드 생성
BEGIN
    FOR i IN 3..50 LOOP
        INSERT INTO POSTS (POST_ID, USER_ID, TITLE, CONTENT, IS_PRIVATE, CATEGORY, CREATED_AT, UPDATED_AT, FILENAMES, READCOUNT, COMMENTCOUNT, STATUS)
        VALUES (i, MOD(i, 10) + 1, '게시글 ' || i, '이것은 테스트 콘텐츠입니다. 번호: ' || i, 
                CASE WHEN MOD(i, 2) = 0 THEN 'Y' ELSE 'N' END, 
                CASE WHEN MOD(i, 3) = 0 THEN 'request' ELSE 'Inquiry' END,
                SYSDATE - MOD(i, 7), SYSDATE, 
                'file' || i || '.txt', 
                MOD(i, 100), MOD(i, 50), 
                CASE WHEN MOD(i, 4) = 0 THEN 'PENDING' WHEN MOD(i, 4) = 1 THEN 'OPEN' ELSE 'CLOSED' END);
    END LOOP;
END;

/






-- 3. COMMENTS(댓글)
CREATE TABLE COMMENTS (
    COMMENT_ID NUMBER(10) PRIMARY KEY,
    POST_ID NUMBER(10) NOT NULL,
    USER_ID NUMBER(10) NOT NULL,
    CONTENT CLOB,
    CREATED_AT DATE DEFAULT SYSDATE,
    FOREIGN KEY (POST_ID) REFERENCES POSTS(POST_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);


-- 4. RATINGS(평가 OR 별점)
CREATE TABLE RATINGS (
    RATING_ID NUMBER(10) PRIMARY KEY,
    POST_ID NUMBER(10) NOT NULL,
    USER_ID NUMBER(10) NOT NULL,
    RATING NUMBER(2) CHECK (RATING BETWEEN 1 AND 5),  -- 별점 1-5
    REVIEW CLOB,
    CREATED_AT DATE DEFAULT SYSDATE,
    FOREIGN KEY (POST_ID) REFERENCES POSTS(POST_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

-- 5. REPORTS(신고)
CREATE TABLE REPORTS (
    REPORT_ID NUMBER(10) PRIMARY KEY,
    POST_ID NUMBER(10) NOT NULL,
    USER_ID NUMBER(10) NOT NULL,
    REASON VARCHAR2(255),
    CREATED_AT DATE DEFAULT SYSDATE,
    FOREIGN KEY (POST_ID) REFERENCES POSTS(POST_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);


-- 6. SCHEDULE(일정)
CREATE TABLE SCHEDULE (
    SCHEDULE_ID NUMBER(10) PRIMARY KEY,
    USER_ID NUMBER(10) NOT NULL,
    POST_ID NUMBER(10),
    EVENT_DATE DATE,
    CREATED_AT DATE DEFAULT SYSDATE,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (POST_ID) REFERENCES POSTS(POST_ID)
);


-- 7. ESTIMATES(견적)
CREATE TABLE ESTIMATES (
    ESTIMATE_ID NUMBER(10) PRIMARY KEY,
    POST_ID NUMBER(10) NOT NULL,
    USER_ID NUMBER(10) NOT NULL,
    ESTIMATED_COST NUMBER(12),  -- 예상 비용
    FINAL_COST NUMBER(12),      -- 최종 비용
    STATUS VARCHAR2(50) NOT NULL CHECK (STATUS IN ('PENDING', 'APPROVED', 'COMPLETED', 'REJECTED')),  -- 견적 상태
    CREATED_AT DATE DEFAULT SYSDATE,
    UPDATED_AT DATE,
    FOREIGN KEY (POST_ID) REFERENCES POSTS(POST_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);


SELECT * FROM COMMENTS;
SELECT * FROM RATINGS;
SELECT * FROM REPORTS;
SELECT * FROM SCHEDULE;
SELECT * FROM ESTIMATES;
SELECT * FROM POSTS;
SELECT * FROM USERS;
